openapi: 3.0.3
info:
  title: Coinway.io
  description: |-
    This is a Cend.app API. These  API's can  be used to  register, validate and login users. There are alos API's available  for wallet creation, fetching and deletion.


    

  termsOfService: http://swagger.io/terms/
  contact:
    email: dev@qidigital.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11

servers:
  - url: httsp://test.coinway.io/api
tags:
  - name: HealthCheck
  - name: Invoice
paths:
  /healthcheck:
    get:
      tags:
       - HealthCheck
      summary: Check the health of API
      description: Check the health of API
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
                
  /invoice:
    get:
      security:
        - BearerAuth: []
      tags:
        - Invoice
      summary: To register a  new  user
      description: To  register new  user.
      responses:
        '200':
          description: To get all invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoiceall'
    post:
      security:
        - BearerAuth: []
      tags:
        - Invoice
      summary: To register a  new  user
      description: To  register new  user.
      requestBody:
        description: Register a new  user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoice'
            examples:
              For New Customer:
                $ref: '#/components/schemas/invoice'
              Existing Customer:
                value:
                  currency: USD
                  customer:
                    id : c_65da6de9813e9
                  items:
                    - description: My Item 1
                      amount : 22
                    - description: My Item 2
                      amount : 22
      responses:
        '200':
          description: Successful Registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoice'
  /invoice/{invoiceId}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Invoice
      summary: To register a  new  user
      description: To  register new  user.
      parameters:
        - name: invoiceId
          in: path
          description:  Unique Invoice Id
          required: true
          schema:
            type: string
            example: p_65e36f37481a6
      responses:
        '200':
          description: Successful Registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoice'
components:
  schemas:
    Health:
      type: object
      properties:
        status:
          type: string
          example: ok
    item:
      type : object
      properties:
        name:
          type : string
          example: Item Name
        unit_price:
          type: number
          example : 10.4
    customer: 
      type: object
      properties:
        name: 
          type: string
          example: John
        email: 
          type: string
          example : john@email.com
    invoice:
      type: object
      required: 
        - currency
        - customer
        - items
      properties:
        currency: 
          type: string
          example: USD
        customer: 
          $ref: '#/components/schemas/customer'
        items:
          type: array
          items:
            $ref: '#/components/schemas/item'
        success_url: # Optional property
          type : string
          example: https://yourdomain.com/payment/success
        cancel_url:
          type: string
          example: https://yourdomain.com/payment/cancel
    invoiceall:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        data:
          type: array
          items: 
            $ref: '#/components/schemas/invoice'
        first_page_url:
          type: string
          format: url
        from:
          type: integer
          example: 1
        last_page:
          type: integer
          example: 1
        last_page_url:
          type: string
          format: url
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
        next_page_url:
          type: string
          example: null
        path:
          type: string
          format: url
        per_page:
          type: integer
          example: 15
        prev_page_url:
          type: string
          example: null
        to:
          type: integer
          example: 2
        total:
          type: integer
          example: 2
    links:
      type: object
      properties:
        url:
          type: string
          format: url
        label:
          type: string
          example: "&laquo; Previous"
        active:
          type: boolean
          example: false
  securitySchemes:
    BearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
